const db = require('../config/db');

// üü¢ L·∫•y danh s√°ch t·∫•t c·∫£ s·∫£n ph·∫©m y√™u th√≠ch
exports.getAllFavorites = async (req, res) => {
  try {
    const query = `
      SELECT yt.MaYeuThich, yt.MaNguoiDung, yt.MaSanPham, yt.NgayThem,
             nd.Ten AS TenNguoiDung, nd.Email,
             sp.Ten AS TenSanPham, sp.HinhAnh
      FROM YeuThich yt
      LEFT JOIN NguoiDung nd ON yt.MaNguoiDung = nd.MaNguoiDung
      LEFT JOIN SanPham sp ON yt.MaSanPham = sp.MaSanPham
      ORDER BY yt.NgayThem DESC
    `;
    const [rows] = await db.query(query);
    res.status(200).json(rows);
  } catch (error) {
    console.error('L·ªói khi l·∫•y danh s√°ch y√™u th√≠ch:', error);
    res.status(500).json({ message: 'C√≥ l·ªói x·∫£y ra, vui l√≤ng th·ª≠ l·∫°i sau.' });
  }
};

// üü¢ L·∫•y danh s√°ch s·∫£n ph·∫©m y√™u th√≠ch theo MaNguoiDung
exports.getFavoritesByUser = async (req, res) => {
  try {
    const { MaNguoiDung } = req.params;
    const query = `
      SELECT yt.MaYeuThich, yt.MaSanPham, yt.NgayThem,
             sp.Ten AS TenSanPham, sp.HinhAnh, sp.Gia, sp.MoTa,
             dm.Ten AS TenDanhMuc
      FROM YeuThich yt
      LEFT JOIN SanPham sp ON yt.MaSanPham = sp.MaSanPham
      LEFT JOIN DanhMuc dm ON sp.MaDanhMuc = dm.MaDanhMuc
      WHERE yt.MaNguoiDung = ?
      ORDER BY yt.NgayThem DESC
    `;
    const [rows] = await db.query(query, [MaNguoiDung]);
    res.status(200).json(rows);
  } catch (error) {
    console.error('L·ªói khi l·∫•y y√™u th√≠ch theo ng∆∞·ªùi d√πng:', error);
    res.status(500).json({ message: 'C√≥ l·ªói x·∫£y ra, vui l√≤ng th·ª≠ l·∫°i sau.' });
  }
};

// üü¢ Th√™m s·∫£n ph·∫©m v√†o danh s√°ch y√™u th√≠ch
exports.addFavorite = async (req, res) => {
  try {
    const { MaNguoiDung, MaSanPham } = req.body;

    // X√°c th·ª±c d·ªØ li·ªáu
    if (!MaNguoiDung || !MaSanPham) {
      return res.status(400).json({ message: 'Vui l√≤ng cung c·∫•p ƒë·∫ßy ƒë·ªß th√¥ng tin.' });
    }

    // Ki·ªÉm tra ng∆∞·ªùi d√πng t·ªìn t·∫°i
    const [user] = await db.query('SELECT MaNguoiDung FROM NguoiDung WHERE MaNguoiDung = ?', [MaNguoiDung]);
    if (user.length === 0) {
      return res.status(404).json({ message: 'Ng∆∞·ªùi d√πng kh√¥ng t·ªìn t·∫°i.' });
    }

    // Ki·ªÉm tra s·∫£n ph·∫©m t·ªìn t·∫°i
    const [product] = await db.query('SELECT MaSanPham FROM SanPham WHERE MaSanPham = ?', [MaSanPham]);
    if (product.length === 0) {
      return res.status(404).json({ message: 'S·∫£n ph·∫©m kh√¥ng t·ªìn t·∫°i.' });
    }

    // Ki·ªÉm tra s·∫£n ph·∫©m ƒë√£ c√≥ trong danh s√°ch y√™u th√≠ch
    const [existing] = await db.query(
      'SELECT MaYeuThich FROM YeuThich WHERE MaNguoiDung = ? AND MaSanPham = ?',
      [MaNguoiDung, MaSanPham]
    );
    if (existing.length > 0) {
      return res.status(400).json({ message: 'S·∫£n ph·∫©m ƒë√£ c√≥ trong danh s√°ch y√™u th√≠ch.' });
    }

    // Th√™m v√†o danh s√°ch y√™u th√≠ch
    const query = 'INSERT INTO YeuThich (MaNguoiDung, MaSanPham) VALUES (?, ?)';
    const [result] = await db.query(query, [MaNguoiDung, MaSanPham]);
    res.status(201).json({ MaYeuThich: result.insertId, message: 'ƒê√£ th√™m s·∫£n ph·∫©m v√†o danh s√°ch y√™u th√≠ch.' });
  } catch (error) {
    console.error('L·ªói khi th√™m y√™u th√≠ch:', error);
    res.status(500).json({ message: 'C√≥ l·ªói x·∫£y ra, vui l√≤ng th·ª≠ l·∫°i sau.' });
  }
};

// üü¢ X√≥a s·∫£n ph·∫©m kh·ªèi danh s√°ch y√™u th√≠ch
exports.deleteFavorite = async (req, res) => {
  try {
    const { MaYeuThich } = req.params;

    // Ki·ªÉm tra y√™u th√≠ch t·ªìn t·∫°i
    const [favorite] = await db.query('SELECT MaYeuThich FROM YeuThich WHERE MaYeuThich = ?', [MaYeuThich]);
    if (favorite.length === 0) {
      return res.status(404).json({ message: 'Y√™u th√≠ch kh√¥ng t·ªìn t·∫°i.' });
    }

    // X√≥a y√™u th√≠ch
    const query = 'DELETE FROM YeuThich WHERE MaYeuThich = ?';
    await db.query(query, [MaYeuThich]);
    res.status(200).json({ message: 'ƒê√£ x√≥a s·∫£n ph·∫©m kh·ªèi danh s√°ch y√™u th√≠ch.' });
  } catch (error) {
    console.error('L·ªói khi x√≥a y√™u th√≠ch:', error);
    res.status(500).json({ message: 'C√≥ l·ªói x·∫£y ra, vui l√≤ng th·ª≠ l·∫°i sau.' });
  }
};