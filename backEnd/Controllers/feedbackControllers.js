const db = require('../config/db');

// üü¢ L·∫•y danh s√°ch t·∫•t c·∫£ ƒë√°nh gi√°
exports.getAllfeedbacks = async (req, res) => {
  try {
    const query = `
      SELECT dg.MaDanhGia, dg.MaNguoiDung, dg.MaSanPham, dg.SoSao, dg.BinhLuan, dg.NgayDanhGia,
             nd.Ten AS TenNguoiDung, nd.Email,
             sp.Ten AS TenSanPham
      FROM DanhGia dg
      LEFT JOIN NguoiDung nd ON dg.MaNguoiDung = nd.MaNguoiDung
      LEFT JOIN SanPham sp ON dg.MaSanPham = sp.MaSanPham
      ORDER BY dg.NgayDanhGia DESC
    `;
    const [rows] = await db.query(query);
    res.status(200).json(rows);
  } catch (error) {
    console.error('L·ªói khi l·∫•y danh s√°ch ƒë√°nh gi√°:', error);
    res.status(500).json({ message: 'C√≥ l·ªói x·∫£y ra, vui l√≤ng th·ª≠ l·∫°i sau.' });
  }
};

// üü¢ L·∫•y danh s√°ch ƒë√°nh gi√° theo MaSanPham
exports.getfeedbacksByProduct = async (req, res) => {
  try {
    const { MaSanPham } = req.params;
    const query = `
      SELECT dg.MaDanhGia, dg.MaNguoiDung, dg.SoSao, dg.BinhLuan, dg.NgayDanhGia,
             nd.Ten AS TenNguoiDung, nd.Email
      FROM DanhGia dg
      LEFT JOIN NguoiDung nd ON dg.MaNguoiDung = nd.MaNguoiDung
      WHERE dg.MaSanPham = ?
      ORDER BY dg.NgayDanhGia DESC
    `;
    const [rows] = await db.query(query, [MaSanPham]);
    res.status(200).json(rows);
  } catch (error) {
    console.error('L·ªói khi l·∫•y ƒë√°nh gi√° theo s·∫£n ph·∫©m:', error);
    res.status(500).json({ message: 'C√≥ l·ªói x·∫£y ra, vui l√≤ng th·ª≠ l·∫°i sau.' });
  }
};

// üü¢ Th√™m ƒë√°nh gi√° m·ªõi
exports.addfeedback = async (req, res) => {
  try {
    const { MaNguoiDung, MaSanPham, SoSao, BinhLuan } = req.body;

    // X√°c th·ª±c d·ªØ li·ªáu
    if (!MaNguoiDung || !MaSanPham || !SoSao) {
      return res.status(400).json({ message: 'Vui l√≤ng cung c·∫•p ƒë·∫ßy ƒë·ªß th√¥ng tin ƒë√°nh gi√°.' });
    }
    if (SoSao < 1 || SoSao > 5) {
      return res.status(400).json({ message: 'S·ªë sao ph·∫£i t·ª´ 1 ƒë·∫øn 5.' });
    }

    // Ki·ªÉm tra ng∆∞·ªùi d√πng t·ªìn t·∫°i
    const [user] = await db.query('SELECT MaNguoiDung FROM NguoiDung WHERE MaNguoiDung = ?', [MaNguoiDung]);
    if (user.length === 0) {
      return res.status(404).json({ message: 'Ng∆∞·ªùi d√πng kh√¥ng t·ªìn t·∫°i.' });
    }

    // Ki·ªÉm tra s·∫£n ph·∫©m t·ªìn t·∫°i
    const [product] = await db.query('SELECT MaSanPham FROM SanPham WHERE MaSanPham = ?', [MaSanPham]);
    if (product.length === 0) {
      return res.status(404).json({ message: 'S·∫£n ph·∫©m kh√¥ng t·ªìn t·∫°i.' });
    }

    // Ki·ªÉm tra ng∆∞·ªùi d√πng ƒë√£ ƒë√°nh gi√° s·∫£n ph·∫©m n√†y ch∆∞a
    const [existing] = await db.query(
      'SELECT MaDanhGia FROM DanhGia WHERE MaNguoiDung = ? AND MaSanPham = ?',
      [MaNguoiDung, MaSanPham]
    );
    if (existing.length > 0) {
      return res.status(400).json({ message: 'B·∫°n ƒë√£ ƒë√°nh gi√° s·∫£n ph·∫©m n√†y r·ªìi.' });
    }

    // Th√™m ƒë√°nh gi√°
    const query = 'INSERT INTO DanhGia (MaNguoiDung, MaSanPham, SoSao, BinhLuan) VALUES (?, ?, ?, ?)';
    const [result] = await db.query(query, [MaNguoiDung, MaSanPham, SoSao, BinhLuan || null]);
    res.status(201).json({ MaDanhGia: result.insertId, message: 'ƒê√°nh gi√° ƒë√£ ƒë∆∞·ª£c th√™m th√†nh c√¥ng.' });
  } catch (error) {
    console.error('L·ªói khi th√™m ƒë√°nh gi√°:', error);
    res.status(500).json({ message: 'C√≥ l·ªói x·∫£y ra, vui l√≤ng th·ª≠ l·∫°i sau.' });
  }
};

// üü¢ C·∫≠p nh·∫≠t ƒë√°nh gi√°
exports.updatefeedback = async (req, res) => {
  try {
    const { MaDanhGia } = req.params;
    const { SoSao, BinhLuan } = req.body;

    // X√°c th·ª±c d·ªØ li·ªáu
    if (!SoSao) {
      return res.status(400).json({ message: 'Vui l√≤ng cung c·∫•p s·ªë sao.' });
    }
    if (SoSao < 1 || SoSao > 5) {
      return res.status(400).json({ message: 'S·ªë sao ph·∫£i t·ª´ 1 ƒë·∫øn 5.' });
    }

    // Ki·ªÉm tra ƒë√°nh gi√° t·ªìn t·∫°i
    const [review] = await db.query('SELECT MaDanhGia FROM DanhGia WHERE MaDanhGia = ?', [MaDanhGia]);
    if (review.length === 0) {
      return res.status(404).json({ message: 'ƒê√°nh gi√° kh√¥ng t·ªìn t·∫°i.' });
    }

    // C·∫≠p nh·∫≠t ƒë√°nh gi√°
    const query = 'UPDATE DanhGia SET SoSao = ?, BinhLuan = ? WHERE MaDanhGia = ?';
    await db.query(query, [SoSao, BinhLuan || null, MaDanhGia]);
    res.status(200).json({ message: 'ƒê√°nh gi√° ƒë√£ ƒë∆∞·ª£c c·∫≠p nh·∫≠t.' });
  } catch (error) {
    console.error('L·ªói khi c·∫≠p nh·∫≠t ƒë√°nh gi√°:', error);
    res.status(500).json({ message: 'C√≥ l·ªói x·∫£y ra, vui l√≤ng th·ª≠ l·∫°i sau.' });
  }
};

// üü¢ X√≥a ƒë√°nh gi√°
exports.deletefeedback = async (req, res) => {
  try {
    const { MaDanhGia } = req.params;

    // Ki·ªÉm tra ƒë√°nh gi√° t·ªìn t·∫°i
    const [review] = await db.query('SELECT MaDanhGia FROM DanhGia WHERE MaDanhGia = ?', [MaDanhGia]);
    if (review.length === 0) {
      return res.status(404).json({ message: 'ƒê√°nh gi√° kh√¥ng t·ªìn t·∫°i.' });
    }

    // X√≥a ƒë√°nh gi√°
    const query = 'DELETE FROM DanhGia WHERE MaDanhGia = ?';
    await db.query(query, [MaDanhGia]);
    res.status(200).json({ message: 'ƒê√°nh gi√° ƒë√£ ƒë∆∞·ª£c x√≥a.' });
  } catch (error) {
    console.error('L·ªói khi x√≥a ƒë√°nh gi√°:', error);
    res.status(500).json({ message: 'C√≥ l·ªói x·∫£y ra, vui l√≤ng th·ª≠ l·∫°i sau.' });
  }
};